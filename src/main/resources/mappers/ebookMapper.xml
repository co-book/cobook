<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ebook.cobook.mapper.ebookMapper">

	<select id="getEbookList" parameterType="String" resultType="EbookVO">
  select 
		e.ebook_no,
		e.title,
		e.author,
    e.publisher,
    e.PUBLISHEDDATE,
    e.CATEGORY,
    e.coverURL,
    NVL(STARRATING.starCount,0) as starCount,
    NVL(STARRATING.starAvg,0) as starAvg
	from EBOOK e 
		LEFT OUTER JOIN (select star.ebook_no, count(*) starCount ,AVG(star.STARRATING) starAvg from star GROUP BY star.ebook_no ) STARRATING
    ON  (STARRATING.ebook_no = e.ebook_no)
    <if test="_parameter != null and !_parameter.equals('') and !_parameter.equals('genres') ">
 		where e.CATEGORY=#{_parameter}
    </if>
    
	</select>


	<insert id="setBookmark" parameterType="EbookVO">	
		insert into BOOKMARK ( BOOKMARK_NO ,MEMBER_NO ,EBOOK_NO ,EBOOKPAGE , READDATE , CHAPTER , MYBOOKMARK  )
		values( BOOKMARK_no_seq.nextval, #{member_no} , #{ebook_no} , #{ebookPage} , SYSDATE , #{chapter} , #{mybookmark})
	</insert>
	
	<delete id="removeBookmark" parameterType="EbookVO" >	
		DELETE FROM BOOKMARK
		WHERE EBOOKPAGE = #{ebookPage} and MEMBER_NO = #{member_no} and EBOOK_NO = #{ebook_no}
	</delete>
	
	
	<select id="getBookmarkList" parameterType="BorrowVO" resultType="BorrowVO">	
		select
		BOOKMARK_NO,
		MEMBER_NO,
		EBOOK_NO,
		EBOOKPAGE,
		READDATE,
		CHAPTER,
		MYBOOKMARK
		from bookmark where member_no=#{member_no} and ebook_no=#{ebook_no}
	</select>

	<update id="updateLastPage" parameterType="BorrowVO">
		UPDATE BORROW SET READPAGE = #{readPage} WHERE BORROW_NO = #{borrow_no}
	</update>
	
	<!-- 대여하기 -->
	<insert id="borrowEbook" parameterType="BorrowVO">
		insert into BORROW ( BORROW_NO ,EBOOK_NO ,MEMBER_NO ,BORROWDATE ,PERIOD ,PRICE ,STATUS ,READPAGE )
		values(borrow_no_seq.nextval, #{ebook_no}, #{member_no} ,  SYSDATE , #{period}, #{price}, 'NEW' ,'NEW')
	</insert>
	
	<!-- 
	select *  from BORROW  where EBOOK_NO='1' and MEMBER_NO='1' and BORROWDATE+period>sysdate  order by BORROWDATE desc 
	 -->
	 <!-- single상세페이지 -->
	 <select id="getEbookDetail" parameterType="EbookVO" resultType="EbookVO">
	 	select
			e.ebook_no,
	 		e.title,
	 		e.author,
	 		e.publisher,
	 		e.translator,
	 		e.publishedDate,
	 		e.intro,
	 		e.price,
	 		e.category,
	 		e.coverURL,
	 		e.fileSize,
	 		e.fileType,
	 		e.listening,
	 		NVL(STARRATING.starCount,0) as starCount,
   			NVL(STARRATING.starAvg,0) as starAvg
    		
			from EBOOK e 
			LEFT OUTER JOIN (select star.ebook_no, count(*) starCount ,AVG(star.STARRATING) starAvg from star GROUP BY star.ebook_no ) STARRATING
    		ON  (STARRATING.ebook_no = e.ebook_no)
	 
     	
     	
     	where e.ebook_no=#{ebook_no}
	 </select>

	 <select id="getMemberBorrow" parameterType="BorrowVO" resultType="java.lang.Float">
	 	select * from 
	 		(select 
	 		borrowDate+period-sysdate as remainDate 
	 		from borrow
	 		where ebook_no=#{ebook_no} and member_no=#{member_no}
	 		order by borrowDate desc)
	 	where rownum=1
	 
	 </select>
	 
	 
	 
</mapper>