<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ebook.cobook.mapper.MybookMapper">

	<resultMap type="java.util.HashMap" id="ResMap">
		<result property="CONTENTS" javaType="java.lang.String" jdbcType="CLOB" typeHandler="org.apache.ibatis.type.ClobTypeHandler" column="CONTENTS" />
	
	</resultMap>



	<select id="getMybookList" resultType="map"
		parameterType="org.ebook.cobook.board.domain.Criteria">
<![CDATA[
SELECT mybook_no, title, reg_date, nickname, hit, fileurl 
FROM(
	 SELECT m1.mybook_no, m1.title, m1.reg_date, m2.nickname, m1.hit, f.fileurl, ROW_NUMBER() OVER(ORDER BY m1.mybook_no desc) AS rn
             FROM mybook m1, member m2, files f
             WHERE m1.MEMBER_NO = m2.MEMBER_NO
             AND m1.MYBOOK_NO = f.BOOK_NO
             AND f.BOOK_TYPE like 'MYBOOK'
             AND f.FILETYPE like 'COVER'
	  )
WHERE rn > #{pageStart} AND ROWNUM <= #{perPageNum}
             ]]>
		<include refid="searchTitle"></include>
	</select>

	<!-- mybook main all list -->
	<select id="getAllMybookList" resultType="MybookVO" parameterType="String">
		select 
		my.mybook_no, 
		my.title, 
		my.coverUrl, 
		mem.nickname, 
		my.reg_date, 
		my.hit,
		NVL(re.myreply, 0) as replyCount
		
		
		from mybook my
		LEFT OUTER JOIN member mem on
		(mem.member_no = my.member_no)
		
		LEFT OUTER JOIN
		<!-- 리플의 갯수를 가져온다 -->
		(select board_no, count(1) myreply from reply
		where PARENT_TYPE = 'MYBOOK'
		group by board_no) re on
		(my.mybook_no = re.board_no)
		
		<include refid="searchTitle"></include>
		order by my.reg_date desc
	</select>
	<!-- mybook 총갯수를 가져오는데, conn에 따라 갯수를 같이 가져오눈거 -->
	<select id="getMybookCount" resultType="int" parameterType="String">
		
		select count(1) from mybook
		<if test="_parameter != null">
			<include refid="searchTitle"></include>
		</if>
	</select>
	
	
	
	
	<!-- <select id="getCriCount" resultType="int">
	<![CDATA[
	  SELECT count(m.mybook_no) 
 	 FROM mybook m, files f
 	 WHERE m.mybook_no > 0 
   AND m.MYBOOK_NO = f.BOOK_NO
   AND f.FILETYPE like 'COVER'
   AND f.BOOK_TYPE like 'MYBOOK'
	]]>
		<include refid="search"></include>

	</select> -->

	<insert id="insert">
		INSERT INTO MYBOOK
		(MYBOOK_NO,
		MEMBER_NO,
		TITLE,
		CONTENTS,
		HIT,
		Reg_date,
		coverUrl,
		intro)
		VALUES
		(mybook_no_seq.nextval,
		#{member_no},
		#{title},
		#{contents},
		0,
		sysdate,
		coverUrl,
		#{intro})

		<!-- <selectKey resultType="int" keyProperty="mybook_no" order="AFTER">
			SELECT mybook_no_seq.currval FROM dual
		</selectKey> -->

	</insert>

	<select id="getMybookSingle" resultMap="ResMap">
		SELECT m.mybook_no,
		m.member_no, m.title, m.contents, m.hit, m.reg_date
		, f.file_no, f.fileurl, m2.nickname
		FROM mybook m, files f, member m2
		WHERE m.mybook_no = #{mybook_no}
		AND
		m.mybook_no = f.book_no
		AND f.BOOK_TYPE like 'MYBOOK'
		AND f.FILETYPE
		like 'COVER'
		AND m.member_no = m2.member_no
	</select>

	<update id="update">
		UPDATE MYBOOK
		SET
		TITLE = #{title},
		CONTENTS =
		#{contents}
		WHERE MYBOOK_NO = #{mybook_no}
	</update>

	<delete id="delete">
		DELETE FROM mybook
		WHERE mybook_no = #{mybook_no}
	</delete>

	<update id="increseHit">
		UPDATE mybook
		SET
		hit = hit + 1
		WHERE
		mybook_no =
		#{mybook_no}

	</update>
	
	<sql id="searchTitle">
		<if test="_parameter != null">
		where 1=1
			<if test="_parameter == 'ㄱ'.toString()">
			AND title between '가' and '나'
			OR title between 'ㄱ' AND 'ㄴ'
			</if>
			<if test="_parameter == 'ㄴ'.toString()">
			AND title between '나' and '다'
			OR title between 'ㄴ' AND 'ㄷ'
			</if>
			<if test="_parameter == 'ㄷ'.toString()">
			AND title between '다' and '라'
			OR title between 'ㄷ' AND 'ㄹ'
			</if>
			<if test="_parameter == 'ㄹ'.toString()">
			AND title between '라' and '마'
			OR title between 'ㄹ' AND 'ㅁ'
			</if>
			<if test="_parameter == 'ㅁ'.toString()">
			AND title between '마' and '바'
			OR title between 'ㅁ' AND 'ㅂ'
			</if>
			<if test="_parameter == 'ㅂ'.toString()">
			AND title between '바' and '사'
			OR title between 'ㅂ' AND 'ㅅ'
			</if>
			<if test="_parameter == 'ㅅ'.toString()">
			AND title between '사' and '아'
			OR title between 'ㅅ' AND 'ㅇ'
			</if>
			<if test="_parameter == 'ㅇ'.toString()">
			AND title between '아' and '자'
			OR title between 'ㅇ' AND 'ㅈ'
			</if>
			<if test="_parameter == 'ㅈ'.toString()">
			AND title between '자' and '차'
			OR title between 'ㅈ' AND 'ㅊ'
			</if>
			<if test="_parameter == 'ㅊ'.toString()">
			AND title between '차' and '카'
			OR title between 'ㅊ' AND 'ㅋ'
			</if>
			<if test="_parameter == 'ㅋ'.toString()">
			AND title between '카' and '타'
			OR title between 'ㅋ' AND 'ㅌ'
			</if>
			<if test="_parameter == 'ㅌ'.toString()">
			AND title between '타' and '파'
			OR title between 'ㅌ' AND 'ㅍ'
			</if>
			<if test="_parameter == 'ㅍ'.toString()">
			AND title between '파' and '하'
			OR title between 'ㅍ' AND 'ㅎ'
			</if>
			<if test="_parameter == 'ㅎ'.toString()">
			AND (title NOT between '가' and '하')
			AND (title NOT between  'ㄱ' AND 'ㅎ')
			AND NOT regexp_like(title, '^[0-9]')
			AND	NOT regexp_like(title, '^[a-zA-Z]')
			</if>
			<if test="_parameter == 'ABC'.toString()">
			AND	regexp_like(title, '^[a-zA-Z]')
			</if>
			<if test="_parameter == '123'.toString()">
			AND regexp_like(title, '^[0-9]')
			</if>
		</if>
	
	</sql>


	<select id="listAll" resultType="MybookVO">
		select * from mybook
	</select>
<!-- <sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				AND title LIKE CONCAT('%', #{keyword}) || '%'
			</if>
			<if test="searchType == 'c'.toString()">
				AND contents LIKE CONCAT('%', #{keyword}) || '%'
			</if>
			<if test="searchType == 'w'.toString()">
				AND member_no
				IN(select member_no FROM member
				WHERE
				nickname LIKE CONCAT('%', #{keyword}) || '%')
			</if>
			<if test="searchType == 'tc'.toString()">
				and ( title LIKE CONCAT('%', #{keyword}) || '%' OR
				contents LIKE
				CONCAT('%', #{keyword}) || '%')
			</if>
			<if test="searchType == 'cw'.toString()">
				and
				( contents LIKE CONCAT('%', #{keyword}) || '%'
				OR
				member_no IN(select member_no FROM member
				WHERE nickname LIKE
				CONCAT('%', #{keyword}) || '%')
				)
			</if>
			<if test="searchType == 'tcw'.toString()">
				AND
				( title LIKE CONCAT('%', #{keyword}) || '%'
				OR
				contents
				LIKE CONCAT('%', #{keyword}) || '%'
				OR
				member_no IN(select member_no
				FROM member
				WHERE nickname LIKE CONCAT('%', #{keyword}) || '%')
				)
			</if>
		</if>
	</sql> -->

</mapper>